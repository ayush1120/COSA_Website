var bulmaCarousel=function(){'use strict';class a{constructor(a){if(this._clickEvent='ontouchstart'in window?'touchstart':'click',this.element='string'==typeof a?document.querySelector(a):a,!this.element)throw new Error('An invalid selector or non-DOM node has been provided.');this.init()}init(){if(this.items=Array.from(this.element.querySelectorAll('.carousel-item')),this.items.forEach((a)=>{let b=a.querySelector('img');b.setAttribute('draggable',!1)}),this.computedStyle=window.getComputedStyle(this.element),this.previousControl=this.element.querySelector('.carousel-nav-left'),this.nextControl=this.element.querySelector('.carousel-nav-right'),1>=this.items.length){const a=this.element.querySelector('.carousel-container');a&&(a.style.left='0'),this.previousControl&&(this.previousControl.style.display='none'),this.nextControl&&(this.nextControl.style.display='none')}this._bindEvents(),this._initOrder(),this.element.dataset.autoplay&&'true'==this.element.dataset.autoplay&&this._autoPlay(this.element.dataset.delay||5e3)}_bindEvents(){this.previousControl&&this.previousControl.addEventListener(this._clickEvent,(a)=>{a.preventDefault(),this._slide('previous'),this._autoPlayInterval&&(clearInterval(this._autoPlayInterval),this._autoPlay(this.element.dataset.delay||5e3))},!1),this.nextControl&&this.nextControl.addEventListener(this._clickEvent,(a)=>{a.preventDefault(),this._slide('next'),this._autoPlayInterval&&(clearInterval(this._autoPlayInterval),this._autoPlay(this.element.dataset.delay||5e3))},!1),this.element.addEventListener('touchstart',(a)=>{this._swipeStart(a)}),this.element.addEventListener('mousedown',(a)=>{this._swipeStart(a)}),this.element.addEventListener('touchend',(a)=>{this._swipeEnd(a)}),this.element.addEventListener('mouseup',(a)=>{this._swipeEnd(a)})}_initOrder(){let a=this.element.querySelector('.carousel-item.is-active');a||(this.items[0].classList.add('is-active'),a=this.items[0]);const b=this.items.indexOf(a);b?this.items.push(this.items.splice(0,b)):this.items.unshift(this.items.pop()),this._setOrder()}_setOrder(){this.items.forEach((a,b)=>{a.style['z-index']=1===b?'1':'0',a.style.order=b})}_swipeStart(a){this._touch={start:{x:a.clientX,y:a.clientY},end:{x:a.clientX,y:a.clientY}}}_swipeEnd(a){this._touch.end={x:a.clientX,y:a.clientY},this._handleGesture()}_handleGesture(){const a={horizontal:(this._touch.end.x-this._touch.start.x)/parseInt(this.computedStyle.getPropertyValue('width')),vertical:(this._touch.end.y-this._touch.start.y)/parseInt(this.computedStyle.getPropertyValue('height'))};a.horizontal>a.vertical&&.25<a.horizontal&&this._slide('previous'),a.horizontal<a.vertical&&-.25>a.horizontal&&this._slide('next')}_slide(a='next'){if(this.items.length){const b=this.element.querySelector('.carousel-item.is-active');let c;b.classList.remove('is-active'),'previous'===a?(this.items.unshift(this.items.pop()),this.element.classList.add('is-reversing')):(this.items.push(this.items.shift()),this.element.classList.remove('is-reversing')),c=1<=this.items.length?this.items[1]:this.items[0],c.classList.add('is-active'),this._setOrder(),this.element.classList.toggle('carousel-animated'),setTimeout(()=>{this.element.classList.toggle('carousel-animated')},50)}}_autoPlay(a=5e3){this._autoPlayInterval=setInterval(()=>{this._slide('next')},a)}}return document.addEventListener('DOMContentLoaded',function(){var b=document.querySelectorAll('.carousel, .hero-carousel');[].forEach.call(b,function(b){new a(b)})}),a}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9leHRlbnNpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjBDQUFlLEFBQU0sQUFBUSxPQUFDLENBQzVCLEFBQVcsQUFBQyxBQUFRLGNBQUUsQ0FNcEIsR0FKQSxBQUFJLEtBQUMsQUFBVyxZQUFJLEFBQWMsZ0JBQUksQUFBTSxPQUF6QixDQUE2QixBQUFZLGFBQUcsQUFBTyxBQUFDLFFBRXZFLEFBQUksS0FBQyxBQUFPLFFBQXVCLEFBQVEsUUFBNUIsQUFBTyxBQUFRLFdBQWdCLEFBQVEsU0FBQyxBQUFhLEFBQUMsQUFBUSxBQUFDLEFBQUcsQUFBUSxBQUFDLG1CQUV0RixDQUFDLEFBQUksS0FBQyxBQUFPLEFBQUUsUUFDakIsS0FBTSxJQUFJLEFBQUssT0FBQyxBQUF3RCxBQUFDLEFBQUMsQUFDM0UsMERBRUQsQUFBSSxLQUFDLEFBQUksQUFBRSxBQUFDLE1BQ2IsQ0FPRCxBQUFJLE1BQUcsQ0FVTCxHQVRBLEFBQUksS0FBQyxBQUFLLE1BQUcsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWdCLGlCQUFDLEFBQWdCLEFBQUMsQUFBQyxBQUFDLG1CQUN6RSxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQU8sUUFBQyxBQUFDLEFBQUksS0FBSyxDQUMzQixHQUFJLEFBQUcsR0FBRyxBQUFJLEVBQUMsQUFBYSxjQUFDLEFBQUssQUFBQyxBQUFDLE9BQ3BDLEFBQUcsRUFBQyxBQUFZLGFBQUMsQUFBVyxBQUFFLEFBQUssQUFBQyxBQUFDLGVBQ3RDLEFBQUMsQUFBQyxHQUNILEFBQUksS0FBQyxBQUFhLGNBQUcsQUFBTSxPQUFDLEFBQWdCLGlCQUFDLEFBQUksS0FBQyxBQUFPLEFBQUMsQUFBQyxTQUUzRCxBQUFJLEtBQUMsQUFBZSxnQkFBRyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWEsY0FBQyxBQUFvQixBQUFDLEFBQUMsc0JBQ3hFLEFBQUksS0FBQyxBQUFXLFlBQUcsQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFhLGNBQUMsQUFBcUIsQUFBQyxBQUFDLHVCQUM1QyxBQUFDLENBQXRCLEFBQUksT0FBQyxBQUFLLE1BQUMsQUFBTSxPQUFPLENBQzFCLEtBQU0sQUFBaUIsR0FBRyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWEsY0FBQyxBQUFxQixBQUFDLEFBQUMsQUFDNUUsQUFBSSxBQUFpQixBQUFFLDJCQUNyQixBQUFpQixFQUFDLEFBQUssTUFBQyxBQUFJLEtBQUcsQUFBRyxBQUFDLEFBQ3BDLEFBQ0QsS0FBSSxBQUFJLEtBQUMsQUFBZSxBQUFFLGtCQUN4QixBQUFJLEtBQUMsQUFBZSxnQkFBQyxBQUFLLE1BQUMsQUFBTyxRQUFHLEFBQU0sQUFBQyxBQUM3QyxBQUNELFFBQUksQUFBSSxLQUFDLEFBQVcsQUFBRSxjQUNwQixBQUFJLEtBQUMsQUFBVyxZQUFDLEFBQUssTUFBQyxBQUFPLFFBQUcsQUFBTSxBQUFDLEFBQ3pDLE9BQ0YsQ0FFRCxBQUFJLEtBQUMsQUFBVyxBQUFFLEFBQUMsY0FDbkIsQUFBSSxLQUFDLEFBQVUsQUFBRSxBQUFDLEFBRWxCLGFBQUksQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFPLFFBQUMsQUFBUSxVQUFxQyxBQUFNLEFBQUUsTUFBekMsQUFBSSxPQUFDLEFBQU8sUUFBQyxBQUFPLFFBQUMsQUFBUSxVQUNoRSxBQUFJLEtBQUMsQUFBUyxVQUFDLEFBQUksS0FBQyxBQUFPLFFBQUMsQUFBTyxRQUFDLEFBQUssT0FBSSxBQUFJLEFBQUMsQUFBQyxBQUNwRCxJQUNGLENBT0QsQUFBVyxhQUFHLEFBQ1osQ0FBSSxBQUFJLEtBQUMsQUFBZSxBQUFFLGlCQUN4QixBQUFJLEtBQUMsQUFBZSxnQkFBQyxBQUFnQixpQkFBQyxBQUFJLEtBQUMsQUFBVyxZQUFFLEFBQUMsQUFBQyxLQUFLLENBQzdELEFBQUMsRUFBQyxBQUFjLEFBQUUsQUFBQyxpQkFDbkIsQUFBSSxLQUFDLEFBQU0sT0FBQyxBQUFVLEFBQUMsQUFBQyxBQUN4QixZQUFJLEFBQUksS0FBQyxBQUFpQixBQUFFLG9CQUMxQixBQUFhLGNBQUMsQUFBSSxLQUFDLEFBQWlCLEFBQUMsQUFBQyxtQkFDdEMsQUFBSSxLQUFDLEFBQVMsVUFBQyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQU8sUUFBQyxBQUFLLE9BQUksQUFBSSxBQUFDLEFBQUMsQUFDcEQsS0FDRixBQUFFLEFBQUssQUFBQyxBQUFDLEFBQ1gsQUFDRCxNQUFJLEFBQUksS0FBQyxBQUFXLEFBQUUsYUFDcEIsQUFBSSxLQUFDLEFBQVcsWUFBQyxBQUFnQixpQkFBQyxBQUFJLEtBQUMsQUFBVyxZQUFFLEFBQUMsQUFBQyxLQUFLLENBQ3pELEFBQUMsRUFBQyxBQUFjLEFBQUUsQUFBQyxpQkFDbkIsQUFBSSxLQUFDLEFBQU0sT0FBQyxBQUFNLEFBQUMsQUFBQyxBQUNwQixRQUFJLEFBQUksS0FBQyxBQUFpQixBQUFFLG9CQUMxQixBQUFhLGNBQUMsQUFBSSxLQUFDLEFBQWlCLEFBQUMsQUFBQyxtQkFDdEMsQUFBSSxLQUFDLEFBQVMsVUFBQyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQU8sUUFBQyxBQUFLLE9BQUksQUFBSSxBQUFDLEFBQUMsQUFDcEQsS0FDRixBQUFFLEFBQUssQUFBQyxBQUFDLEFBQ1gsTUFHRCxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWdCLGlCQUFDLEFBQVksYUFBRSxBQUFDLEFBQUMsS0FBSyxDQUNqRCxBQUFJLEtBQUMsQUFBVyxBQUFDLEFBQUMsQUFBQyxBQUFDLGNBQ3JCLEFBQUMsQUFBQyxHQUNILEFBQUksS0FBQyxBQUFPLFFBQUMsQUFBZ0IsaUJBQUMsQUFBVyxZQUFFLEFBQUMsQUFBQyxLQUFLLENBQ2hELEFBQUksS0FBQyxBQUFXLEFBQUMsQUFBQyxBQUFDLEFBQUMsY0FDckIsQUFBQyxBQUFDLEdBRUgsQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFnQixpQkFBQyxBQUFVLFdBQUUsQUFBQyxBQUFDLEtBQUssQ0FDL0MsQUFBSSxLQUFDLEFBQVMsQUFBQyxBQUFDLEFBQUMsQUFBQyxZQUNuQixBQUFDLEFBQUMsR0FDSCxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWdCLGlCQUFDLEFBQVMsVUFBRSxBQUFDLEFBQUMsS0FBSyxDQUM5QyxBQUFJLEtBQUMsQUFBUyxBQUFDLEFBQUMsQUFBQyxBQUFDLFlBQ25CLEFBQUMsQUFBQyxFQUNKLENBT0QsQUFBVSxZQUFHLENBQ1gsR0FBSSxBQUFpQixHQUFHLEFBQUksS0FBQyxBQUFPLFFBQUMsQUFBYSxjQUFDLEFBQTBCLEFBQUMsQUFBQyxBQUMvRSxBQUFJLEFBQUMsQUFBaUIsQUFBRSxnQ0FDdEIsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFDLEFBQUMsR0FBQyxBQUFTLFVBQUMsQUFBRyxJQUFDLEFBQVcsQUFBQyxBQUFDLGFBQ3pDLEFBQWlCLEVBQUcsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFDLEFBQUMsQUFBQyxBQUNuQyxJQUNELEtBQU0sQUFBb0IsR0FBRyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQU8sQUFBQyxBQUFpQixBQUFDLEFBQUMsQUFDbkUsQUFFQSxBQUFJLEFBQW9CLEFBQUUsYUFDeEIsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFNLE9BQUMsQUFBQyxBQUFFLEFBQW9CLEFBQUMsQUFBQyxBQUFDLEFBQzdELEFBQU0sTUFDTCxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQU8sUUFBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUcsQUFBRSxBQUFDLEFBQUMsQUFDdEMsT0FDRCxBQUFJLEtBQUMsQUFBUyxBQUFFLEFBQUMsV0FDbEIsQ0FNRCxBQUFTLFdBQUcsQ0FDVixBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQU8sUUFBQyxBQUFDLEFBQUksQUFBRSxBQUFLLE9BQUssQUFDbEMsQ0FHRSxBQUFJLEVBQUMsQUFBSyxNQUFDLEFBQVMsQUFBQyxXQUhULEFBQUMsQUFBRSxBQUNmLEFBQUksQUFBQyxBQUFLLEFBQUMsQUFBUyxBQUFDLENBRG5CLEFBQUssS0FHaUIsQUFBRyxBQUFDLEFBQzdCLElBSHlCLEFBQUcsQUFBQyxBQUM3QixBQUFNLElBR1AsQUFBSSxFQUFDLEFBQUssTUFBQyxBQUFLLEFBQUcsQUFBSyxBQUFDLE9BQzFCLEFBQUMsQUFBQyxFQUNKLENBUUQsQUFBVyxBQUFDLEFBQUMsY0FBRSxDQUNiLEFBQUksS0FBQyxBQUFNLE9BQUcsQ0FDWixBQUFLLE1BQUUsQ0FDTCxBQUFDLEVBQUUsQUFBQyxFQUFDLEFBQU8sUUFDWixBQUFDLEVBQUUsQUFBQyxFQUFDLEFBQU8sQUFDYixTQUNELEFBQUcsSUFBRSxDQUNILEFBQUMsRUFBRSxBQUFDLEVBQUMsQUFBTyxRQUNaLEFBQUMsRUFBRSxBQUFDLEVBQUMsQUFBTyxBQUNiLEFBQ0YsU0FDRixDQVFELEFBQVMsQUFBQyxBQUFDLFlBQUUsQ0FDWCxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQUcsSUFBRyxDQUNoQixBQUFDLEVBQUUsQUFBQyxFQUFDLEFBQU8sUUFDWixBQUFDLEVBQUUsQUFBQyxFQUFDLEFBQU8sQUFDYixTQUVELEFBQUksS0FBQyxBQUFjLEFBQUUsQUFBQyxnQkFDdkIsQ0FPRCxBQUFjLGdCQUFHLENBQ2YsS0FBTSxBQUFLLEdBQUcsQ0FDWixBQUFVLFdBQUUsQ0FBQyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQUcsSUFBQyxBQUFDLEVBQUcsQUFBSSxLQUFDLEFBQU0sT0FBQyxBQUFLLE1BQUMsQUFBQyxHQUFJLEFBQVEsU0FBQyxBQUFJLEtBQUMsQUFBYSxjQUFDLEFBQWdCLGlCQUFDLEFBQU8sQUFBQyxBQUFDLFVBQzlHLEFBQVEsU0FBRSxDQUFDLEFBQUksS0FBQyxBQUFNLE9BQUMsQUFBRyxJQUFDLEFBQUMsRUFBRyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQUssTUFBQyxBQUFDLEdBQUksQUFBUSxTQUFDLEFBQUksS0FBQyxBQUFhLGNBQUMsQUFBZ0IsaUJBQUMsQUFBUSxBQUFDLEFBQUMsQUFDOUcsQUFBQyxBQUVGLFlBQUksQUFBSyxFQUFDLEFBQVUsV0FBRyxBQUFLLEVBQUMsQUFBUSxVQUF1QixBQUFJLEFBQUUsR0FBekIsQUFBSyxHQUFDLEFBQVUsWUFDdkQsQUFBSSxLQUFDLEFBQU0sT0FBQyxBQUFVLEFBQUMsQUFBQyxBQUN6QixBQUVELFlBQUksQUFBSyxFQUFDLEFBQVUsV0FBRyxBQUFLLEVBQUMsQUFBUSxVQUF1QixDQUFDLEFBQUksQUFBRSxHQUExQixBQUFLLEdBQUMsQUFBVSxZQUN2RCxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQU0sQUFBQyxBQUFDLEFBQ3JCLE9BQ0YsQ0FRRCxBQUFNLE9BQUMsQUFBUyxFQUFHLEFBQU0sT0FBRSxDQUN6QixHQUFJLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxPQUFFLENBQ3JCLEtBQU0sQUFBaUIsR0FBRyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQWEsY0FBQyxBQUEwQixBQUFDLEFBQUMsNEJBQ2pGLEdBQUksQUFBYSxBQUFDLEdBRWxCLEFBQWlCLEVBQUMsQUFBUyxVQUFDLEFBQU0sT0FBQyxBQUFXLEFBQUMsQUFBQyxBQUdoRCxhQUFrQixBQUFVLEFBQUUsVUFBMUIsQUFBUyxNQUVYLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTyxRQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBRyxBQUFFLEFBQUMsQUFBQyxPQUVyQyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQVMsVUFBQyxBQUFHLElBQUMsQUFBYyxBQUFDLEFBQUMsQUFDNUMsQUFBTSxrQkFFTCxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUssQUFBRSxBQUFDLEFBQUMsU0FFcEMsQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFTLFVBQUMsQUFBTSxPQUFDLEFBQWMsQUFBQyxBQUFDLEFBQy9DLEFBRUQsbUJBQXlCLEFBQUMsQUFBRSxBQUMxQixBQUFhLENBRFgsQUFBSSxPQUFDLEFBQUssTUFBQyxBQUFNLE9BQ0gsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFDLEFBQUMsQUFBQyxBQUMvQixBQUFNLEFBQ0wsQUFBYSxHQUFHLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBQyxBQUFDLEFBQUMsQUFDL0IsR0FDRCxBQUFhLEVBQUMsQUFBUyxVQUFDLEFBQUcsSUFBQyxBQUFXLEFBQUMsQUFBQyxhQUN6QyxBQUFJLEtBQUMsQUFBUyxBQUFFLEFBQUMsWUFHakIsQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFTLFVBQUMsQUFBTSxPQUFDLEFBQW1CLEFBQUMsQUFBQyxxQkFFbkQsQUFBVSxXQUFDLElBQU0sQ0FDZixBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQVMsVUFBQyxBQUFNLE9BQUMsQUFBbUIsQUFBQyxBQUFDLG9CQUNwRCxFQUFFLEFBQUUsQUFBQyxBQUFDLEdBQ1IsQ0FDRixDQVFELEFBQVMsVUFBQyxBQUFLLEVBQUcsQUFBSSxJQUFFLENBQ3RCLEFBQUksS0FBQyxBQUFpQixrQkFBRyxBQUFXLFlBQUMsSUFBTSxDQUN6QyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQU0sQUFBQyxBQUFDLE9BQ3JCLEFBQUUsQUFBSyxBQUFDLEFBQUMsSUFDWCxBQUNGLFFBT0QsQUFBUSxVQUFDLEFBQWdCLGlCQUFDLEFBQWtCLG1CQUFFLFVBQVcsQ0FDdkQsR0FBSSxBQUFTLEdBQUcsQUFBUSxTQUFDLEFBQWdCLGlCQUFDLEFBQTJCLEFBQUMsQUFBQyw2QkFDdkUsQUFBRSxHQUFDLEFBQU8sUUFBQyxBQUFJLEFBQUMsQUFBUyxPQUFFLEFBQVMsQUFBUSxXQUFFLENBQzVDLEFBQUksQUFBUSxBQUFDLEFBQVEsQUFBQyxBQUFDLFFBQ3hCLEFBQUMsQUFBQyxFQUNKLEFBQUMsQUFBQyIsImZpbGUiOiJidWxtYS1jYXJvdXNlbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJvdXNlbCB7XHJcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcclxuICAgIC8vIERldGVybWluZSBjbGljayBldmVudCBkZXBlbmRpbmcgb24gaWYgd2UgYXJlIG9uIFRvdWNoIGRldmljZSBvciBub3RcclxuICAgIHRoaXMuX2NsaWNrRXZlbnQgPSAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KSA/ICd0b3VjaHN0YXJ0JyA6ICdjbGljayc7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gdHlwZW9mIHNlbGVjdG9yID09PSAnc3RyaW5nJyA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpIDogc2VsZWN0b3I7XHJcbiAgICAvLyBBbiBpbnZhbGlkIHNlbGVjdG9yIG9yIG5vbi1ET00gbm9kZSBoYXMgYmVlbiBwcm92aWRlZC5cclxuICAgIGlmICghdGhpcy5lbGVtZW50KSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignQW4gaW52YWxpZCBzZWxlY3RvciBvciBub24tRE9NIG5vZGUgaGFzIGJlZW4gcHJvdmlkZWQuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbml0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWF0ZSBwbHVnaW5cclxuICAgKiBAbWV0aG9kIGluaXRcclxuICAgKiBAcmV0dXJuIHt2b2lkfVxyXG4gICAqL1xyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLml0ZW1zID0gQXJyYXkuZnJvbSh0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhcm91c2VsLWl0ZW0nKSk7XHJcbiAgICB0aGlzLml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgbGV0IGltZyA9IGl0ZW0ucXVlcnlTZWxlY3RvcignaW1nJyk7XHJcbiAgICAgIGltZy5zZXRBdHRyaWJ1dGUoJ2RyYWdnYWJsZScsIGZhbHNlKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5jb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5lbGVtZW50KTtcclxuXHJcbiAgICB0aGlzLnByZXZpb3VzQ29udHJvbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtbmF2LWxlZnQnKTtcclxuICAgIHRoaXMubmV4dENvbnRyb2wgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLW5hdi1yaWdodCcpO1xyXG4gICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoIDw9IDEpIHtcclxuICAgICAgY29uc3QgY2Fyb3VzZWxDb250YWluZXIgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLWNvbnRhaW5lcicpO1xyXG4gICAgICBpZiAoY2Fyb3VzZWxDb250YWluZXIpIHtcclxuICAgICAgICBjYXJvdXNlbENvbnRhaW5lci5zdHlsZS5sZWZ0ID0gJzAnO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLnByZXZpb3VzQ29udHJvbCkge1xyXG4gICAgICAgIHRoaXMucHJldmlvdXNDb250cm9sLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMubmV4dENvbnRyb2wpIHtcclxuICAgICAgICB0aGlzLm5leHRDb250cm9sLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9iaW5kRXZlbnRzKCk7XHJcbiAgICB0aGlzLl9pbml0T3JkZXIoKTtcclxuXHJcbiAgICBpZiAodGhpcy5lbGVtZW50LmRhdGFzZXQuYXV0b3BsYXkgJiYgdGhpcy5lbGVtZW50LmRhdGFzZXQuYXV0b3BsYXkgPT0gJ3RydWUnKSB7XHJcbiAgICAgIHRoaXMuX2F1dG9QbGF5KHRoaXMuZWxlbWVudC5kYXRhc2V0LmRlbGF5IHx8IDUwMDApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQmluZCBhbGwgZXZlbnRzXHJcbiAgICogQG1ldGhvZCBfYmluZEV2ZW50c1xyXG4gICAqIEByZXR1cm4ge3ZvaWR9XHJcbiAgICovXHJcbiAgX2JpbmRFdmVudHMoKSB7XHJcbiAgICBpZiAodGhpcy5wcmV2aW91c0NvbnRyb2wpIHtcclxuICAgICAgdGhpcy5wcmV2aW91c0NvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLl9jbGlja0V2ZW50LCAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLl9zbGlkZSgncHJldmlvdXMnKTtcclxuICAgICAgICBpZiAodGhpcy5fYXV0b1BsYXlJbnRlcnZhbCkge1xyXG4gICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9hdXRvUGxheUludGVydmFsKTtcclxuICAgICAgICAgIHRoaXMuX2F1dG9QbGF5KHRoaXMuZWxlbWVudC5kYXRhc2V0LmRlbGF5IHx8IDUwMDApO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMubmV4dENvbnRyb2wpIHtcclxuICAgICAgdGhpcy5uZXh0Q29udHJvbC5hZGRFdmVudExpc3RlbmVyKHRoaXMuX2NsaWNrRXZlbnQsIChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHRoaXMuX3NsaWRlKCduZXh0Jyk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2F1dG9QbGF5SW50ZXJ2YWwpIHtcclxuICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5fYXV0b1BsYXlJbnRlcnZhbCk7XHJcbiAgICAgICAgICB0aGlzLl9hdXRvUGxheSh0aGlzLmVsZW1lbnQuZGF0YXNldC5kZWxheSB8fCA1MDAwKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBCaW5kIHN3aXBlIGV2ZW50c1xyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoZSkgPT4ge1xyXG4gICAgICB0aGlzLl9zd2lwZVN0YXJ0KGUpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGUpID0+IHtcclxuICAgICAgdGhpcy5fc3dpcGVTdGFydChlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIChlKSA9PiB7XHJcbiAgICAgIHRoaXMuX3N3aXBlRW5kKGUpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChlKSA9PiB7XHJcbiAgICAgIHRoaXMuX3N3aXBlRW5kKGUpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWF0ZSBzbGlkZXMgb3JkZXJcclxuICAgKiBAbWV0aG9kIF9pbml0T3JkZXJcclxuICAgKiBAcmV0dXJuIHt2b2lkfVxyXG4gICAqL1xyXG4gIF9pbml0T3JkZXIoKSB7XHJcbiAgICBsZXQgY3VycmVudEFjdGl2ZUl0ZW0gPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLWl0ZW0uaXMtYWN0aXZlJyk7XHJcbiAgICBpZiAoIWN1cnJlbnRBY3RpdmVJdGVtKSB7XHJcbiAgICAgIHRoaXMuaXRlbXNbMF0uY2xhc3NMaXN0LmFkZCgnaXMtYWN0aXZlJyk7XHJcbiAgICAgIGN1cnJlbnRBY3RpdmVJdGVtID0gdGhpcy5pdGVtc1swXTtcclxuICAgIH1cclxuICAgIGNvbnN0IGN1cnJlbnRBY3RpdmVJdGVtUG9zID0gdGhpcy5pdGVtcy5pbmRleE9mKGN1cnJlbnRBY3RpdmVJdGVtKTtcclxuICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMuaXRlbXMubGVuZ3RoO1xyXG5cclxuICAgIGlmIChjdXJyZW50QWN0aXZlSXRlbVBvcykge1xyXG4gICAgICB0aGlzLml0ZW1zLnB1c2godGhpcy5pdGVtcy5zcGxpY2UoMCwgY3VycmVudEFjdGl2ZUl0ZW1Qb3MpKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuaXRlbXMudW5zaGlmdCh0aGlzLml0ZW1zLnBvcCgpKTtcclxuICAgIH1cclxuICAgIHRoaXMuX3NldE9yZGVyKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVcGRhdGUgZWFjaCBzbGlkZSBvcmRlclxyXG4gICAqIEBtZXRob2QgX3NldE9yZGVyXHJcbiAgICovXHJcbiAgX3NldE9yZGVyKCkge1xyXG4gICAgdGhpcy5pdGVtcy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgICBpZiAoaW5kZXggIT09IDEpIHtcclxuICAgICAgICBpdGVtLnN0eWxlWyd6LWluZGV4J10gPSAnMCc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaXRlbS5zdHlsZVsnei1pbmRleCddID0gJzEnO1xyXG4gICAgICB9XHJcbiAgICAgIGl0ZW0uc3R5bGUub3JkZXIgPSBpbmRleDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2F2ZSBjdXJyZW50IHBvc2l0aW9uIG9uIHN0YXJ0IHN3aXBpbmdcclxuICAgKiBAbWV0aG9kIF9zd2lwZVN0YXJ0XHJcbiAgICogQHBhcmFtICB7RXZlbnR9ICAgIGUgU3dpcGUgZXZlbnRcclxuICAgKiBAcmV0dXJuIHt2b2lkfVxyXG4gICAqL1xyXG4gIF9zd2lwZVN0YXJ0KGUpIHtcclxuICAgIHRoaXMuX3RvdWNoID0ge1xyXG4gICAgICBzdGFydDoge1xyXG4gICAgICAgIHg6IGUuY2xpZW50WCxcclxuICAgICAgICB5OiBlLmNsaWVudFlcclxuICAgICAgfSxcclxuICAgICAgZW5kOiB7XHJcbiAgICAgICAgeDogZS5jbGllbnRYLFxyXG4gICAgICAgIHk6IGUuY2xpZW50WVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTYXZlIGN1cnJlbnQgcG9zaXRpb24gb24gZW5kIHN3aXBpbmdcclxuICAgKiBAbWV0aG9kIF9zd2lwZUVuZFxyXG4gICAqIEBwYXJhbSAge0V2ZW50fSAgZSBzd2lwZSBldmVudFxyXG4gICAqIEByZXR1cm4ge3ZvaWR9XHJcbiAgICovXHJcbiAgX3N3aXBlRW5kKGUpIHtcclxuICAgIHRoaXMuX3RvdWNoLmVuZCA9IHtcclxuICAgICAgeDogZS5jbGllbnRYLFxyXG4gICAgICB5OiBlLmNsaWVudFlcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9oYW5kbGVHZXN0dXJlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJZGVudGlmeSB0aGUgZ2VzdHVyZWFuZCBzbGlkZSBpZiBuZWNlc3NhcnlcclxuICAgKiBAbWV0aG9kIF9oYW5kbGVHZXN0dXJlXHJcbiAgICogQHJldHVybiB7dm9pZH1cclxuICAgKi9cclxuICBfaGFuZGxlR2VzdHVyZSgpIHtcclxuICAgIGNvbnN0IHJhdGlvID0ge1xyXG4gICAgICBob3Jpem9udGFsOiAodGhpcy5fdG91Y2guZW5kLnggLSB0aGlzLl90b3VjaC5zdGFydC54KSAvIHBhcnNlSW50KHRoaXMuY29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCd3aWR0aCcpKSxcclxuICAgICAgdmVydGljYWw6ICh0aGlzLl90b3VjaC5lbmQueSAtIHRoaXMuX3RvdWNoLnN0YXJ0LnkpIC8gcGFyc2VJbnQodGhpcy5jb21wdXRlZFN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpKVxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAocmF0aW8uaG9yaXpvbnRhbCA+IHJhdGlvLnZlcnRpY2FsICYmIHJhdGlvLmhvcml6b250YWwgPiAwLjI1KSB7XHJcbiAgICAgIHRoaXMuX3NsaWRlKCdwcmV2aW91cycpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChyYXRpby5ob3Jpem9udGFsIDwgcmF0aW8udmVydGljYWwgJiYgcmF0aW8uaG9yaXpvbnRhbCA8IC0wLjI1KSB7XHJcbiAgICAgIHRoaXMuX3NsaWRlKCduZXh0Jyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVcGRhdGUgc2xpZGVzIHRvIGRpc3BsYXkgdGhlIHdhbnRlZCBvbmVcclxuICAgKiBAbWV0aG9kIF9zbGlkZVxyXG4gICAqIEBwYXJhbSAge1N0cmluZ30gW2RpcmVjdGlvbj0nbmV4dCddIERpcmVjdGlvbiBpbiB3aGljaCBzbGlkZSBuZWVkcyB0byBtb3ZlXHJcbiAgICogQHJldHVybiB7dm9pZH1cclxuICAgKi9cclxuICBfc2xpZGUoZGlyZWN0aW9uID0gJ25leHQnKSB7XHJcbiAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgY3VycmVudEFjdGl2ZUl0ZW0gPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLWl0ZW0uaXMtYWN0aXZlJyk7XHJcbiAgICAgIGxldCBuZXdBY3RpdmVJdGVtO1xyXG5cclxuICAgICAgY3VycmVudEFjdGl2ZUl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnaXMtYWN0aXZlJyk7XHJcblxyXG4gICAgICAvLyBpbml0aWFsaXplIGRpcmVjdGlvbiB0byBjaGFuZ2Ugb3JkZXJcclxuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ3ByZXZpb3VzJykge1xyXG4gICAgICAgIC8vIFJlb3JkZXIgaXRlbXNcclxuICAgICAgICB0aGlzLml0ZW1zLnVuc2hpZnQodGhpcy5pdGVtcy5wb3AoKSk7XHJcbiAgICAgICAgLy8gYWRkIHJldmVyc2UgY2xhc3NcclxuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaXMtcmV2ZXJzaW5nJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gUmVvcmRlciBpdGVtc1xyXG4gICAgICAgIHRoaXMuaXRlbXMucHVzaCh0aGlzLml0ZW1zLnNoaWZ0KCkpO1xyXG4gICAgICAgIC8vIHJlX3NsaWRlIHJldmVyc2UgY2xhc3NcclxuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtcmV2ZXJzaW5nJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA+PSAxKSB7XHJcbiAgICAgICAgbmV3QWN0aXZlSXRlbSA9IHRoaXMuaXRlbXNbMV07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbmV3QWN0aXZlSXRlbSA9IHRoaXMuaXRlbXNbMF07XHJcbiAgICAgIH1cclxuICAgICAgbmV3QWN0aXZlSXRlbS5jbGFzc0xpc3QuYWRkKCdpcy1hY3RpdmUnKTtcclxuICAgICAgdGhpcy5fc2V0T3JkZXIoKTtcclxuXHJcbiAgICAgIC8vIERpc2FibGUgdHJhbnNpdGlvbiB0byBpbnN0YW50IGNoYW5nZSBvcmRlclxyXG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnY2Fyb3VzZWwtYW5pbWF0ZWQnKTtcclxuICAgICAgLy8gRW5hYmxlIHRyYW5zaXRpb24gdG8gYW5pbWF0ZSBvcmRlciAxIHRvIG9yZGVyIDJcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2Nhcm91c2VsLWFuaW1hdGVkJyk7XHJcbiAgICAgIH0sIDUwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluaXRpYXRlIGF1dG9wbGF5IHN5c3RlbVxyXG4gICAqIEBtZXRob2QgX2F1dG9QbGF5XHJcbiAgICogQHBhcmFtICB7TnVtYmVyfSAgW2RlbGF5PTUwMDBdIERlbGF5IGJldHdlZW4gc2xpZGVzIGluIG1pbGxpc2Vjb25kc1xyXG4gICAqIEByZXR1cm4ge3ZvaWR9XHJcbiAgICovXHJcbiAgX2F1dG9QbGF5KGRlbGF5ID0gNTAwMCkge1xyXG4gICAgdGhpcy5fYXV0b1BsYXlJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgdGhpcy5fc2xpZGUoJ25leHQnKTtcclxuICAgIH0sIGRlbGF5KTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbml0aWF0ZSBhbGwgRE9NIGVsZW1lbnQgY29udGFpbmluZyBjYXJvdXNlbCBjbGFzc1xyXG4gKiBAbWV0aG9kXHJcbiAqIEByZXR1cm4ge1t0eXBlXX0gW2Rlc2NyaXB0aW9uXVxyXG4gKi9cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gIHZhciBjYXJvdXNlbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWwsIC5oZXJvLWNhcm91c2VsJyk7XHJcbiAgW10uZm9yRWFjaC5jYWxsKGNhcm91c2VscywgZnVuY3Rpb24oY2Fyb3VzZWwpIHtcclxuICAgIG5ldyBDYXJvdXNlbChjYXJvdXNlbCk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXX0=
